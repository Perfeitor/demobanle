@page "/Danhmuc/Vattuhanghoa/QuanlyNhomhang"
@using DBDATA.Models
@using MUDTEMPLATE.Services
@using DBDATA
@using Microsoft.AspNetCore.Authorization

@inject INhomhangService nhomhangService
@inject INganhhangService nganhhangService

@attribute [Authorize]

<style>
    .selected {
        background-color: #1E88E5 !important;
    }

        .selected > td {
            color: white !important;
        }

            .selected > td .mud-input {
                color: white !important;
            }
</style>

<MudTabs Elevation="2" Rounded="true" ApplyEffectsToContainer="true" PanelClass="pa-6" Color="@Color.Primary">
    <MudTabPanel Text="Nhóm hàng">
        <MudPaper Class="p-2 mb-2">
            <MudGrid Spacing="1">
                @if (createMode)
                {
                    <MudItem xs="6" md="4">
                        <MudTextField Margin="Margin.Dense" @bind-Value="@newItem.Manhomhang" Label="Mã nhóm hàng" 
                            Variant="Variant.Outlined">
                        </MudTextField>
                    </MudItem>

                    <MudItem xs="6" md="4">
                        <MudSelect Label="Ngành hàng" Dense="true" ReadOnly="false" Variant="Variant.Outlined" Margin="Margin.Dense" Lines="1" T="string"
                                   @bind-Value="@newItem.Manganh" @bind-Value:after=ChangedNganhhang>
                            <Virtualize Items="@Nganhhangs" Context="nganhhang">
                                <MudSelectItem @bind-Value="nganhhang.Manganh"></MudSelectItem>
                            </Virtualize>
                        </MudSelect>
                    </MudItem>

                    @* <MudItem xs="6" md="4">
                        <MudSelect Label="Ngành hàng" Dense="true" ReadOnly="false" Variant="Variant.Outlined" Margin="Margin.Dense" Lines="1" 
                                   T="string" @bind-Value="@newItem.Manganh">
                            @foreach (var item in Nganhhangs)
                            {
                                <MudSelectItem Value="@(item.Manganh)">@item.Manganh</MudSelectItem>
                            }
                        </MudSelect>
                    </MudItem> *@


                    <MudItem xs="12" md="4">
                        <MudTextField Margin="Margin.Dense" @bind-Value="@newItem.Tennhomhang" Label="Tên nhóm hàng" 
                            Variant="Variant.Outlined">
                        </MudTextField>
                    </MudItem>

                    <MudItem xs="6" md="4">
                        <MudTextField Margin="Margin.Dense" @bind-Value="@newItem.Tylecpvc" Label="Tỷ lệ" 
                            Variant="Variant.Outlined">
                        </MudTextField>
                    </MudItem>

                    <MudItem xs="6" md="4">
                        <MudTextField Margin="Margin.Dense" @bind-Value="@newItem.Mota" Label="Mô tả" 
                            Variant="Variant.Outlined">
                        </MudTextField>
                    </MudItem>
                }
                @if (!createMode)
                {
                    <MudItem xs="6" md="4">
                        <MudTextField Margin="Margin.Dense" ShrinkLabel Label="Mã nhóm hàng" Variant="Variant.Outlined" T="string"
                                      @bind-Value="@SelectedItem.Manhomhang" disabled="@isTextBoxDisabled"></MudTextField>
                    </MudItem>

                    <MudItem xs="6" md="4">
                        <MudSelect Label="Ngành hàng" Dense="true" ReadOnly="false" Variant="Variant.Outlined" Margin="Margin.Dense" Lines="1" T="string"
                                   @bind-Value="@SelectedItem.Manganh" @bind-Value:after=ChangedNganhhang disabled="@isTextBoxDisabled">
                            <Virtualize Items="@Nganhhangs" Context="nganhhang">
                                <MudSelectItem @bind-Value="nganhhang.Manganh"></MudSelectItem>
                            </Virtualize>
                        </MudSelect>
                    </MudItem>

                    <MudItem xs="12" md="4">
                        <MudTextField Margin="Margin.Dense" ShrinkLabel Label="Tên nhóm hàng" Variant="Variant.Outlined" T="string"
                                      @bind-Value="@SelectedItem.Tennhomhang" disabled="@isTextBoxDisabled"></MudTextField>
                    </MudItem>

                    <MudItem xs="6" md="4">
                        <MudTextField Margin="Margin.Dense" Format="N2" ShrinkLabel Label="Tỷ lệ" Variant="Variant.Outlined"
                                      @bind-Value="@SelectedItem.Tylecpvc" disabled="@isTextBoxDisabled"></MudTextField>
                    </MudItem>

                    <MudItem xs="6" md="4">
                        <MudTextField Margin="Margin.Dense" ShrinkLabel Label="Mô tả" Variant="Variant.Outlined" T="string"
                                      @bind-Value="@SelectedItem.Mota" disabled="@isTextBoxDisabled"></MudTextField>
                    </MudItem>
                }
                <MudItem xs="12" md="12" Class="px-2">
                    <MudButton xs="4" Size="Size.Small" Disabled="@btnStatus" Class="mr-1 mb-2" Variant="Variant.Filled" OnClick="Add"
                               StartIcon="@Icons.Material.Filled.Add" Color="Color.Success">Thêm</MudButton>

                    <MudButton xs="4" Size="Size.Small" Disabled="@btnStatus" Class="mr-1 mb-2" Variant="Variant.Filled" OnClick="Edit"
                               StartIcon="@Icons.Material.Filled.Edit" Color="Color.Warning">Sửa</MudButton>

                    <MudButton xs="4" Size="Size.Small" Disabled="@btnStatus" Class="mr-1 mb-2" Variant="Variant.Filled" OnClick="Delete"
                               StartIcon="@Icons.Material.Filled.Delete" Color="Color.Error">Xoá</MudButton>

                    <MudButton xs="6" Size="Size.Small" Disabled="@(!btnStatus)" Class="mr-1 mb-2" Variant="Variant.Filled" OnClick="Confirm"
                               StartIcon="@Icons.Material.Filled.Check" Color="Color.Success">Lưu</MudButton>

                    <MudButton xs="6" Size="Size.Small" Disabled="@(!btnStatus)" Class="mr-1 mb-2" Variant="Variant.Filled" OnClick="Cancel"
                               StartIcon="@Icons.Material.Filled.Cancel" Color="Color.Error">Hủy</MudButton>
                </MudItem>

                <MudItem xs="12" md="12">
                    @if (!string.IsNullOrEmpty(errorMessage))
                    {
                        <MudAlert Severity="Severity.Warning">@errorMessage</MudAlert>
                    }
                    @if (!string.IsNullOrEmpty(successMessage))
                    {
                        <MudAlert Severity="Severity.Success">@successMessage</MudAlert>
                    }
                </MudItem>
            </MudGrid>
        </MudPaper>

        <MudPaper>
            <MudDataGrid Dense="true" Breakpoint="Breakpoint.None" Style="white-space:nowrap" Bordered="true" Striped="true" Items="@Nhomhangs"
                         RowClassFunc="HighlightSelectedItem" SortMode="SortMode.Multiple" MultiSelection="false" Hover="true" 
                         @bind-SelectedItem=@SelectedItem>
                <ToolBarContent>
                    @* <MudText Typo="Typo.h6" Style="font-size:16px"><b>Danh sách nhóm hàng</b></MudText> *@
                    <MudItem xs="12" md="12" Class="px-2">
                        <MudTextField @bind-Value="_searchString" Placeholder="Search" Adornment="Adornment.Start" Immediate="true"
                                      AdornmentIcon="@Icons.Material.Filled.Search" Variant="Variant.Outlined" Margin="Margin.Dense"></MudTextField>
                    </MudItem>
                </ToolBarContent>

                <Columns>
                    <PropertyColumn Property="x => x.Manhomhang" Title="Mã nhóm hàng" />
                    <PropertyColumn Property="x => x.Tennhomhang" Title="Tên nhóm hàng" />
                    <PropertyColumn Property="x => x.Tylecpvc" Format="N2" Title="Tỷ lệ cpcv" />
                    <PropertyColumn Property="x => x.Manganh" Title="Mã ngành" />
                    <PropertyColumn Property="x => x.Ngaytao" Title="Ngày tạo" />
                    <PropertyColumn Property="x => x.Tendangnhap" Title="Người tạo" />
                    <PropertyColumn Property="x => x.Mota" Title="Mô tả" />
                </Columns>
                <PagerContent>
                    <MudDataGridPager Style="max-width:100%" T="DBDATA.Models.Nhomhang" />
                </PagerContent>
            </MudDataGrid>
        </MudPaper>
    </MudTabPanel>

    <MudTabPanel Text="Nhóm hàng phụ">
        <MudText>Nhóm hàng phụ</MudText>
    </MudTabPanel>
</MudTabs>

@code {
    #region Biến
    List<DBDATA.Models.Nhomhang> Nhomhangs = new();
    List<DBDATA.Models.Nganhhang> Nganhhangs = new();
    bool btnStatus = false;
    bool createMode = false;
    bool editMode = false;
    string errorMessage = string.Empty;
    string successMessage = string.Empty;
    DBDATA.Models.Nhomhang newItem = new();
    DBDATA.Models.Nhomhang SelectedItem = new();  
    public Nhomhang lastClickItem = new();
    string selectedNganhhang = "";
    private bool isTextBoxDisabled = true;
    // private IEnumerable<Nhomhang> gridData;
    private string _searchString;
    #endregion

    private Func<Nhomhang, bool> _quickFilter => x =>
    {
        if (string.IsNullOrWhiteSpace(_searchString))
            return true;

        if (!string.IsNullOrEmpty(x.Manhomhang) && x.Manhomhang.Contains(_searchString, StringComparison.OrdinalIgnoreCase))
            return true;

        if (!string.IsNullOrEmpty(x.Tennhomhang) && x.Tennhomhang.Contains(_searchString, StringComparison.OrdinalIgnoreCase))
            return true;

        if (!string.IsNullOrEmpty(x.Manganh) && x.Manganh.Contains(_searchString, StringComparison.OrdinalIgnoreCase))
            return true;

        return false;
    };

    private void ChangedNganhhang()
    {
        if (lastClickItem == null || Nganhhangs == null)
        {
            selectedNganhhang = string.Empty;
        }

        var item = Nganhhangs.FirstOrDefault(n => n.Manganh?.ToUpper() == lastClickItem.Manganh?.ToUpper());
        selectedNganhhang = item?.Tennganh ?? string.Empty;
    }

    #region Khởi tạo
    protected override async Task OnInitializedAsync()
    {
        Nhomhangs = await nhomhangService.GetAllNhomhang();
        Nganhhangs = await nganhhangService.GetAllNganhhang();
        // await Task.Run(LoadNhomhang);

        if (Nhomhangs.Count > 0)
            SelectedItem = Nhomhangs[0];
        return;
    }
    #endregion

    // private async Task LoadNhomhang()
    // {
    //     await nhomhangService.GetNhomhang();
    //     gridData = nhomhangService.DmNhomhang;
    // }

    #region Phương thức
    public string HighlightSelectedItem(DBDATA.Models.Nhomhang SelectedNhomhang, int RowNumber)
    {
        if (SelectedItem != null && SelectedItem.Equals(SelectedNhomhang))
        {
            return "selected";
        }
        return string.Empty;
    }
    public void Add()
    {
        errorMessage = string.Empty;
        successMessage = string.Empty;
        createMode = true;
        btnStatus = true;
    }
    public void Edit()
    {
        errorMessage = string.Empty;
        successMessage = string.Empty;
        editMode = true;
        btnStatus = true;
        isTextBoxDisabled = false;
    }
    public void Delete()
    {
        errorMessage = string.Empty;
        successMessage = string.Empty;
        btnStatus = true;        
    }
    public async Task Confirm()
    {
        if (createMode)
        {
            if (!string.IsNullOrEmpty(newItem.Manhomhang) && !string.IsNullOrEmpty(newItem.Tennhomhang))
            {
                await nhomhangService.AddNhomhang(newItem);
                Nhomhangs = await nhomhangService.GetAllNhomhang();
                successMessage = "Thêm nhóm hàng thành công";
            }
            else
            {
                errorMessage = "Xin vui lòng điền đầy đủ thông tin";
            }
        }
        else if (btnStatus)
        {
            if (editMode)
            {
                await nhomhangService.EditNhomhang(SelectedItem);
                Nhomhangs = await nhomhangService.GetAllNhomhang();
                successMessage = "Sửa nhóm hàng thành công";
            }
            else
            {
                await nhomhangService.DeleteNhomhang(SelectedItem);
                Nhomhangs = await nhomhangService.GetAllNhomhang();
                successMessage = "Xoá nhóm hàng thành công";
            }
        }
        SelectedItem = new();
        newItem = new();
        btnStatus = false;
        createMode = false;
        editMode = false;
        // isTextBoxDisabled = true;
        StateHasChanged();
    }
    public void Cancel()
    {
        SelectedItem = new();
        newItem = new();
        btnStatus = false;
        createMode = false;
        editMode = false;
        isTextBoxDisabled = true;
    }
    #endregion
}
